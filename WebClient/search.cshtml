@{
    Layout = "~/_Layout.cshtml";
}
@section CustomCss{
    <style type="text/css">
        body {
            padding-top: 60px;
            padding-bottom: 40px;
        }

        .sidebar-nav {
            padding: 9px 0;
        }
    </style>
}
@section FooterJs{
    <script type="text/javascript" 
        src="http://maps.googleapis.com/maps/api/js?key=@System.Configuration.ConfigurationManager.AppSettings["googleApiKey"]&sensor=false">
    </script>
    <script type="text/javascript">
        var server = "@System.Configuration.ConfigurationManager.AppSettings["server"]";

        var currentLocation = new LocationViewModel();

        function setCommand(command) {
            $("#filter-command").val(command);
        }

        function parseCommand() {
            var cmdString = $("#filter-command").val();
            var idx = cmdString.indexOf(":");
            if (idx == -1)
                return;

            var cmd = cmdString.substring(0, idx);
            var args = cmdString.substring(idx + 1);

            switch (cmd) {
                case 'getservice':
                    getService(args);
                    break;
                case 'listorigin':
                    getOrigin(args);
                    break;
                case 'listorigin-crs':
                    getOrigin(args, true);
                    break;
                case 'liststation':
                    getStation(args);
                    break;
                case 'liststation-crs':
                    getStation(args, true);
                    break;
            }
        }

        var currentWttResult = new WttSearchResults();

        function getService(wttId) {
            document.location.hash = "getservice:" + wttId;
            $.getJSON("http://" + server + ":82/TrainMovement/WithWttId/" + wttId, function (data) {
                currentWttResult.clearTrains();
                if (data.length > 0) {
                    $("#no-results-row").hide();
                    for (i in data) {
                        var result = new WttSearchResult();
                        result.TrainId(data[i].TrainId);
                        result.Headcode(data[i].HeadCode);
                        result.WttId(data[i].WttId);
                        result.From(data[i].From);
                        result.Depart(data[i].Depart);
                        result.To('');
                        result.Arrive('');

                        currentWttResult.addTrain(result);

                        fetchLocation(data[i].From);
                    }
                } else {
                    $("#no-results-row").show();
                }
            });
        }

        function getOrigin(args, convertFromCrs) {
            if (convertFromCrs) {
                document.location.hash = "listorigin-crs:" + args;
                $.getJSON("http://" + server + ":82/Stanox/?GetByCrs&crsCode=" + args, function (data) {
                    getOriginByStanox(data.Name);
                });
            } else {
                document.location.hash = "listorigin:" + args;
                getOriginByStanox(args);
            }
        }

        function getStation(args, convertFromCrs) {
            if (convertFromCrs) {
                document.location.hash = "liststation-crs:" + args;
                $.getJSON("http://" + server + ":82/Stanox/?GetByCrs&crsCode=" + args, function (data) {
                    getCallingAtStanox(data.Name);
                });
            } else {
                document.location.hash = "liststation:" + args;
                getCallingAtStanox(args);
            }
        }

        function getOriginByStanox(stanox) {
            listStation(stanox);
            $.getJSON("http://" + server + ":82/TrainMovement/StartingAtStation/" + stanox, function (data) {
                currentWttResult.clearTrains();
                if (data.length > 0) {
                    $("#no-results-row").hide();
                    for (i in data) {
                        var result = new WttSearchResult();
                        result.TrainId(data[i].Id);
                        result.TrainUid(data[i].TrainUid);
                        result.Headcode(data[i].HeadCode);
                        result.WttId(data[i].WorkingTTId);
                        result.From(data[i].SchedOriginStanox);
                        result.Depart(data[i].SchedOriginDeparture);
                        result.To('');
                        result.Arrive('');

                        currentWttResult.addTrain(result);
                    }
                } else {
                    $("#no-results-row").show();
                }

                fetchLocation(stanox);
            });
        }

        function getCallingAtStanox(stanox) {
            listStation(stanox);
            $.getJSON("http://" + server + ":82/TrainMovement/CallingAtStation/" + stanox, function (data) {
                currentWttResult.clearTrains();
                if (data.length > 0) {
                    $("#no-results-row").hide();
                    for (i in data) {
                        var result = new WttSearchResult();
                        result.TrainId(data[i].Id);
                        result.TrainUid(data[i].TrainUid);
                        result.Headcode(data[i].HeadCode);
                        result.WttId(data[i].WorkingTTId);
                        result.From(data[i].SchedOriginStanox);
                        result.Depart(data[i].SchedOriginDeparture);
                        result.To('');
                        result.Arrive('');

                        currentWttResult.addTrain(result);

                        fetchLocation(data[i].SchedOriginStanox);
                    }
                } else {
                    $("#no-results-row").show();
                }
            });
        }

        function fetchLocation(stanox) {
            loadLocation(stanox, function (data) {
                var html = "";
                if (data.StationName) {
                    html = data.StationName;
                } else {
                    html = data.Tiploc;
                }
                if (data.CRS) {
                    html += "(" + data.CRS + ")";
                }
                $("." + data.Name).html(html);
                $("." + data.Name).attr('title', data.Description + '(' + data.Name + ')');
                $("." + data.Name).tooltip();
                $("." + data.Name).data("title", html);
            });
        }

        function clearData() {
            currentWttResult.clearTrains();
        }

        function preLoadStationsCallback(results) {
            var commands = [];
            commands.push('getservice:');
            commands.push('listorigin:');
            for (i in results) {
                commands.push('listorigin:' + results[i].Name)
            }
            commands.push('listorigin-crs:');
            for (i in results) {
                commands.push('listorigin-crs:' + results[i].CRS)
            }
            commands.push('liststation:');
            for (i in results) {
                commands.push('liststation:' + results[i].Name)
            }
            commands.push('liststation-crs:');
            for (i in results) {
                commands.push('liststation-crs:' + results[i].CRS)
            }
            $("#filter-command").typeahead({
                source: commands
            });
        }

        function listStation(stanox) {
            $.getJSON("http://" + server + ":82/Stanox/" + stanox, function (data) {
                currentLocation.locationStanox(data.Name);
                currentLocation.locationTiploc(data.Tiploc);
                currentLocation.locationDescription(data.Description);
                currentLocation.locationCRS(data.CRS);
                currentLocation.stationName(data.StationName);
            });
        }

        $(function () {
            preLoadStations(preLoadStationsCallback);

            ko.applyBindings(currentWttResult, $("#train-id-result").get(0));

            ko.applyBindings(currentLocation, $("#stationDetails").get(0));

            loadHashCommand();
        });

        function loadHashCommand() {
            if (document.location.hash.length > 0) {
                setCommand(document.location.hash.substr(1));
                parseCommand();
            }
            return false;
        }

    </script>
}
@section TopMenu{
    <li><a href="~/">Live Feed</a></li>
    <li><a href="~/train">Train</a></li>
    <li class="active"><a href="#">Search</a></li>
}

<div class="row-fluid">
    <div class="span2">
        <div class="well sidebar-nav" id="locationDetails">
            <ul class="nav nav-list">
                <li class="nav-header">Commands</li>
                <li><a href="#getservice:" onclick="setCommand('getservice:');"><strong>Get Service:</strong><br />
                    &nbsp;&nbsp;getservice:[wttid]</a></li>
                <li><a href="#listorigin:" onclick="setCommand('listorigin:');"><strong>List Trains Originating From:</strong><br />
                    &nbsp;&nbsp;listorigin:[stanox]</a></li>
                <li><a href="#listorigin-crs:" onclick="setCommand('listorigin-crs:');"><strong>List Trains Originating From:</strong><br />
                    &nbsp;&nbsp;listorigin-crs:[crs]</a></li>
                <li><a href="#listorigin:" onclick="setCommand('liststation:');"><strong>List Trains Calling At:</strong><br />
                    &nbsp;&nbsp;liststation:[stanox]</a></li>
                <li><a href="#listorigin-crs:" onclick="setCommand('liststation-crs:');"><strong>List Trains Calling At:</strong><br />
                    &nbsp;&nbsp;liststation-crs:[crs]</a></li>
            </ul>
        </div>
        <div class="well sidebar-nav" id="stationDetails">
            <ul class="nav nav-list">
                <li class="nav-header" data-bind="text: stationName">Station Details</li>
                <li><strong>CRS:</strong><span data-bind="text: locationCRS"></span></li>
                <li><a data-bind="attr: { href :'search#listorigin:' + locationStanox() }" onclick="loadHashCommand();" title="View Trains Starting from this station">Trains Starting From</a></li>
                <li><a data-bind="attr: { href :'search#liststation:' + locationStanox() }" onclick="loadHashCommand();" title="View Trains Calling from this station">Trains Calling At</a></li>
                @*<li><a id="stationDetails-term" title="View Trains Terminating at this station">Terminating At</a></li>*@
            </ul>
        </div>
    </div>
    <!--/span2-->
    <div class="span10">
        <div class="row alert alert-info" id="no-results-row" style="display:none">
            <strong>No Results Found</strong>
        </div>
        <div class="row btn-group">
            <div class="input-prepend">
                <span class="add-on"><i class="icon-asterisk"></i></span>
                <input type="text" id="filter-command" class="span9" placeholder="Enter Command" />&nbsp;&nbsp;&nbsp;
                        <a class="btn btn_disconnect" id="btn_Command" onclick="parseCommand();" title="Send Command"><i class="icon-arrow-right"></i></a>
                <a class="btn" href="#" title="Clear data" onclick="clearData();"><i class="icon-remove"></i></a>
            </div>
        </div>
        <div class="row" id="train-id-result">
            <table class="table table-hover table-bordered">
                <thead>
                    <tr>
                        <th>Train ID</th>
                        <th>Headcode</th>
                        <th>WTT ID</th>
                        <th>From</th>
                        <th>Sched Departure</th>
                        <th>To</th>
                        <th>Sched Arrival</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: Trains">
                    <tr>
                        <td><a data-bind="text: TrainId, attr: { href: 'train#gettrain:' + TrainId() + ':' + TrainUid() }"></a></td>
                        <td data-bind="text: Headcode"></td>
                        <td data-bind="text: WttId"></td>
                        <td><span data-bind="text: From, css: From"></span></td>
                        <td data-bind="text: Depart"></td>
                        <td data-bind="text: To"></td>
                        <td data-bind="text: Arrive"></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <!--/span10-->
</div>
<!--/row-fluid-->
